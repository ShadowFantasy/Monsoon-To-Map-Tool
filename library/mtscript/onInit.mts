[H: libname = "net.shadow.fantasy.lib.monsoon.sheetapi"]
[H: broadcast(libname + "@onInit.mts: initializing", "gm")]
[H: broadcast(libname + "@onInit.mts: creating javascript namespace \"net.monsoon.lib\"", "gm")]
[H: scriptspace = "net.monsoon.lib"]
[H: jsfile = data.getStaticData(libname, "js/ValMS.js")]
[H: js.createNS(scriptspace, 1)]
[H: js.evalNS(scriptspace, jsfile)]

[H: "-----------Mastersheet@monsoon.sheetapi-----------"]
[H: "Clear Mastersheet@monsoon.sheetapi to ensure proper updates if any."]
[H: broadcast(libname + "@onInit.mts: resetting Mastersheet@monsoon.sheetapi gm macro panel...", "gm")]
[H: macroGroup = getMacroGroup("Mastersheet@monsoon.sheetapi", ",", "gm")]
[H, FOREACH(index, macroGroup): removeMacro(index, "gm")]

[H: "-----Set Mastersheet-----"]
[H: "Creates the mastersheet update button. This is used for setting the link to the mastersheet that other important scripts require"]
[H: mtsfile = data.getStaticData(libname, "assets/buttons/setMS.mts")]
[H: jsonfile = data.getStaticData(libname, "assets/buttons/setMS.json")]
[H: mtsname = json.get(jsonfile,"label")]

[H: broadcast(libname + "@onInit.mts: creating '" + mtsname +"'", "gm")]
[H: mcbindex = createMacro(jsonfile, "gm")]
[H: setMacroCommand(mcbindex, mtsfile, "gm")]

[H: "-----Give Sheet Access-----"]
[H: "Creates the player token setup button. This is used to give players mastersheet access to update their tokens."]
[H: mtsfile = data.getStaticData(libname, "assets/buttons/setPD.mts")]
[H: jsonfile = data.getStaticData(libname, "assets/buttons/setPD.json")]
[H: mtsname = json.get(jsonfile,"label")]

[H: broadcast(libname + "@onInit.mts: creating '" + mtsname +"'", "gm")]
[H: mcbindex = createMacro(jsonfile, "gm")]
[H: setMacroCommand(mcbindex, mtsfile, "gm")]

[H: "-----Update Selected Players-----"]
[H: "Creates the update selected button. This is used to allow the gm to update multiple selected player tokens."]
[H: mtsfile = data.getStaticData(libname, "assets/buttons/updateSP.mts")]
[H: jsonfile = data.getStaticData(libname, "assets/buttons/updateSP.json")]
[H: mtsname = json.get(jsonfile,"label")]

[H: broadcast(libname + "@onInit.mts: creating '" + mtsname +"'", "gm")]
[H: mcbindex = createMacro(jsonfile, "gm")]
[H: setMacroCommand(mcbindex, mtsfile, "gm")]

[H: "-----Update All Players-----"]
[H: "Creates the update all button. This is used to allow the gm to update all player tokens."]
[H: mtsfile = data.getStaticData(libname, "assets/buttons/updateAP.mts")]
[H: jsonfile = data.getStaticData(libname, "assets/buttons/updateAP.json")]
[H: mtsname = json.get(jsonfile,"label")]

[H: broadcast(libname + "@onInit.mts: creating '" + mtsname +"'", "gm")]
[H: mcbindex = createMacro(jsonfile, "gm")]
[H: setMacroCommand(mcbindex, mtsfile, "gm")]

[H: "-----------Dice@monsoon.sheetapi-----------"]
[H: "Clear Dice@monsoon.sheetapi to ensure proper updates if any."]
[H: broadcast(libname + "@onInit.mts: resetting Dice@monsoon.sheetapi campaign macro panel...", "gm")]
[H: macroGroup = getMacroGroup("Dice@monsoon.sheetapi", ",", "campaign")]
[H, FOREACH(index, macroGroup): removeMacro(index, "campaign")]

[H: "-----Skill Check As Selected-----"]
[H: "Creates the update all button. This is used to allow the gm to update all player tokens."]
[H: mtsfile = data.getStaticData(libname, "public/assets/buttons/skillCheck.mts")]
[H: jsonfile = data.getStaticData(libname, "public/assets/buttons/skillCheck.json")]
[H: mtsname = json.get(jsonfile,"label")]

[H: broadcast(libname + "@onInit.mts: creating '" + mtsname +"'", "gm")]
[H: mcbindex = createMacro(jsonfile, "campaign")]
[H: setMacroCommand(mcbindex, mtsfile, "campaign")]

[H: "-----------User Defined Functions-----------"]
[H: broadcast(libname + "@onInit.mts: initializing UDFS ", "gm")]

[H: "-----Check-----"]
[H: "cRoll UDF, does a check and displays results. The result is measured in successes."]
[H: broadcast(libname + "@onInit.mts: creating 'cRoll'", "gm")]
[H: defineFunction("cRoll", "cRoll@Lib:"+libname)]

[H: "-----Total-----"]
[H: "tRoll UDF, sums up a dice roll and displays results. The result is measured by the sum total."]
[H: broadcast(libname + "@onInit.mts: creating 'tRoll'", "gm")]
[H: defineFunction("tRoll", "tRoll@Lib:"+libname)]